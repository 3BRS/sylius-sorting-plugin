version: 2.1

workflows:
    workflow:
        jobs:
            -   build:
                    name: php-8.0-sylius-<< matrix.sylius_version >>
                    php_version: "8.0"
                    matrix:
                        parameters:
                            sylius_version: [ "1.12" ]
            -   build:
                    name: php-8.1-sylius-<< matrix.sylius_version >>
                    php_version: "8.1"
                    matrix:
                        parameters:
                            sylius_version: [ "1.12" ]
            -   build:
                    name: php-8.2-sylius-<< matrix.sylius_version >>
                    php_version: "8.2"
                    matrix:
                        parameters:
                            sylius_version: [ "1.12" ]

jobs:
    build:
        parameters:
            sylius_version:
                type: string
            php_version:
                type: string
        docker:
            -   image: webdevops/php-nginx:<< parameters.php_version >>-alpine
                environment:
                    - DATABASE_URL=mysql://root:pass_root@127.0.0.1:3306/3brs_sylius_sorting_plugin_%kernel.environment%?serverVersion=8.0
            -   image: cimg/mysql:8.0
                environment:
                    MYSQL_ROOT_PASSWORD: pass_root
                    MYSQL_USER: sylius
                    MYSQL_PASSWORD: pass
        steps:
            - checkout
            -   run: apk update
            # 'mariadb-connector-c' to avoid ERROR 1045 (28000): Plugin caching_sha2_password could not be loaded: Error loading shared library /usr/lib/mariadb/plugin/caching_sha2_password.so: No such file or directory
            -   run: apk add yarn mysql-client mariadb-connector-c
            -   run: composer self-update
            -   run: composer require "sylius/sylius:<< parameters.sylius_version >>.*" --no-interaction --no-update

            -   restore_cache:
                    keys:
                        - vendor-cache-prefer-dist-<< parameters.php_version >>-{{ checksum "composer.json" }}-{{ checksum "tests/Application/package.json" }}
            -   run: COMPOSER_MEMORY_LIMIT=-1 composer update --no-interaction --prefer-dist
            -   run: yarn --cwd tests/Application install
            -   run: yarn --cwd tests/Application build
            -   save_cache:
                    key: vendor-cache-prefer-dist-<< parameters.php_version >>-{{ checksum "composer.json" }}-{{ checksum "tests/Application/package.json" }}
                    paths:
                        - ./vendor
                        - ./tests/Application/node_modules
            -   run:
                    name: Wait for database
                    command: timeout 60s bash -c -- 'while ! nc -z localhost 3306; do sleep 0.1; done' \
                        && timeout 30s bash -c -- 'mysql --user=sylius --password=pass --host=localhost --port=3306 -e "exit"'
            -   run: (cd tests/Application && bin/console doctrine:database:create --env=test -vvv)
            -   run: (cd tests/Application && bin/console doctrine:schema:create --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:clear --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:warmup --env=test -vvv)
            -   run: composer analyze
            -   run: composer test

            # has to delete vendor for next test with different libraries version to avoid Composer error 'Failed to extract...' if vendor dir cache does not exist
            -   run: rm -fr vendor composer.lock
            -   restore_cache:
                    keys:
                        - vendor-cache-prefer-lowest-<< parameters.php_version >>-{{ checksum "composer.json" }}-{{ checksum "tests/Application/package.json" }}
            -   run: COMPOSER_MEMORY_LIMIT=-1 composer update --no-interaction --prefer-lowest
            -   run: yarn --cwd tests/Application install
            -   run: yarn --cwd tests/Application build
            -   save_cache:
                    key: vendor-cache-prefer-lowest-<< parameters.php_version >>-{{ checksum "composer.json" }}-{{ checksum "tests/Application/package.json" }}
                    paths:
                        - ./vendor
                        - ./tests/Application/node_modules
            -   run: (cd tests/Application && bin/console cache:clear --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:warmup --env=test -vvv)
            -   run: composer analyze
            -   run: composer test
